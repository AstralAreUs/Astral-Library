local UILibrary = {}

-- Function to create ScreenGui
function UILibrary:CreateScreenGui(name)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = name
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game.CoreGui
    return screenGui
end

-- Function to create Window
function UILibrary:CreateWindow(screenGui, name, size, position)
    local window = Instance.new("Frame")
    window.Name = name
    window.Size = UDim2.new(0, size.X, 0, size.Y)
    window.Position = position
    window.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    window.Parent = screenGui
    
    local dragify = function(frame)
        local dragging, dragInput, dragStart, startPos
        local function update(input)
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
        frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        frame.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end
    dragify(window)
    
    return window
end

-- Function to create Button
function UILibrary:CreateButton(parent, name, buttonText, size, position)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0, size.X, 0, size.Y)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = buttonText
    button.Parent = parent
    return button
end

-- Function to create Panel
function UILibrary:CreatePanel(parent, name, size, position)
    local panel = Instance.new("Frame")
    panel.Name = name
    panel.Size = UDim2.new(0, size.X, 0, size.Y)
    panel.Position = position
    panel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    panel.Parent = parent
    return panel
end

-- Function to create Slider
function UILibrary:CreateSlider(parent, name, size, position)
    local slider = Instance.new("Frame")
    slider.Name = name
    slider.Size = UDim2.new(0, size.X, 0, size.Y)
    slider.Position = position
    slider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    slider.Parent = parent

    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(0, size.X, 0, size.Y / 2)
    bar.Position = UDim2.new(0, 0, 0.5, -size.Y / 4)
    bar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    bar.Parent = slider

    local knob = Instance.new("Frame")
    knob.Size = UDim2.new(0, 10, 0, size.Y)
    knob.Position = UDim2.new(0, 0, 0, 0)
    knob.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    knob.Parent = slider

    knob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local moveConnection
            local releaseConnection

            moveConnection = game:GetService("UserInputService").InputChanged:Connect(function(moveInput)
                if moveInput.UserInputType == Enum.UserInputType.MouseMovement then
                    local relativeXPosition = moveInput.Position.X - slider.AbsolutePosition.X
knob.Position = UDim2.new(math.clamp(relativeXPosition / slider.AbsoluteSize.X, 0, 1), 0, 0, 0)
                end
            end)

            releaseConnection = game:GetService("UserInputService").InputEnded:Connect(function(releaseInput)
                if releaseInput.UserInputType == Enum.UserInputType.MouseButton1 then
                    moveConnection:Disconnect()
                    releaseConnection:Disconnect()
                end
            end)
        end
    end)

    return slider
end

-- Function to create InputField
function UILibrary:CreateInputField(parent, name, size, position, placeholderText)
    local inputField = Instance.new("TextBox")
    inputField.Name = name
    inputField.Size = UDim2.new(0, size.X, 0, size.Y)
    inputField.Position = position
    inputField.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    inputField.TextColor3 = Color3.fromRGB(0, 0, 0)
    inputField.PlaceholderText = placeholderText
    inputField.Parent = parent
    return inputField
end

return UILibrary
